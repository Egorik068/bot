import sqlite3

class ADMcommand():
    '''–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –î–ë –∞–¥–º—ñ–Ω—ñ–≤'''
    def __init__(self, database):
        '''–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –î–ë'''
        self.conn = sqlite3.connect(database)
        self.c = self.conn.cursor()
        
    def check_adm(self, user_id):
        '''–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ê–¥–º—ñ–Ω–∫–∏'''
        return self.c.execute("SELECT adm FROM users WHERE user_id = ?", (user_id, )).fetchone()
    
    def plus_adm(self, user_id):
        '''+ –ê–¥–º—ñ–Ω–∫–∞'''
        self.c.execute("UPDATE users SET adm = 1 WHERE user_id = ?", (user_id, ))
        self.conn.commit()

    def plus_two_adm(self, user_id):
        '''++ –ê–¥–º—ñ–Ω–∫–∞'''
        self.c.execute("UPDATE users SET adm = 2 WHERE user_id = ?", (user_id, ))
        self.conn.commit()
        
    def plus_three_adm(self, user_id):
        '''+++ –ê–¥–º—ñ–Ω–∫–∞'''
        self.c.execute("UPDATE users SET adm = 3 WHERE user_id = ?", (user_id, ))
        self.conn.commit()
        
    def plus_four_adm(self, user_id):
        '''++++ –ê–¥–º—ñ–Ω–∫–∞'''
        self.c.execute("UPDATE users SET adm = 4 WHERE user_id = ?", (user_id, ))
        self.conn.commit()
        
    def plus_five_adm(self, user_id):
        '''+++++ –ê–¥–º—ñ–Ω–∫–∞'''
        self.c.execute("UPDATE users SET adm = 5 WHERE user_id = ?", (user_id, ))
        self.conn.commit()
        
    def minus_adm(self, user_id):
        '''-–∞–¥–º—ñ–Ω–∫–∞'''
        self.c.execute('UPDATE users SET adm = 0 WHERE user_id = ?', (user_id, ))
        self.conn.commit()



  
#        if '–°–ª–æ—Ç ' in message.text:
#            user_id_money = message.from_user.id
#            slot_symma = int(message.text[4:])
#            check_money_score_start = (db.slot(user_id_money)[0])
#            start_score = random.choice(slot_emoji)
#            start_random_win = int(random.choice(random_win))
#            check_money_score_otrizite = db.slot(user_id_money)[0]
#            if bool(check_money_score_start) == True and check_money_score_otrizite.isdigit() == True:
#                if check_money_score_start >= slot_symma:
#                    if start_score == '1':
#                        slot_symma_plus = check_money_score_start + (slot_symma * start_random_win)
#                        slot_symma_pokaz_plus = slot_symma * (start_random_win)
#                        db.new_score(slot_symma_plus, user_id_money)
#                        check_money_score = db.slot(user_id_money)[0]
#                        await message.reply(f'[üòÅ](tg://user?id={user_id_money})–¢–∏ –≤–∏–≥—Ä–∞–≤!!!\nüìà +{slot_symma_pokaz_plus}$\nüí∏–¢–µ–ø–µ—Ä –≤ —Ç–µ–±–µ: {check_money_score}$', parse_mode='Markdown')
#                    elif start_score == '2':
#                        slot_symma_minus = check_money_score_start - (slot_symma * 2)
#                        slot_symma_pokaz_minus = slot_symma * 2
#                        db.new_score(slot_symma_minus, user_id_money)
#                        check_money_score = db.slot(user_id_money)[0]
#                        await message.reply(f'[üò¢](tg://user?id={user_id_money})–¢–∏ –ø—Ä–æ–≥—Ä–∞–≤(((\nüìâ -{slot_symma_pokaz_minus}$\nüí∏–¢–µ–ø–µ—Ä –≤ —Ç–µ–±–µ: {check_money_score}$', parse_mode='Markdown')
#                else:
#                    await message.reply('–í —Ç–µ–±–µ –Ω–µ–º–∞—î —Ç–∞–∫–æ—ó —Å—É–º–º–∏!!')
#            else:
#                await message.reply('–í —Ç–µ–±–µ –º—ñ–Ω—É—Å–æ–≤–µ —á–∏—Å–ª–æ(')
